
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {
      worker_connections  1024;  ## Default: 1024
    }
    http {
      server {
        listen   80;
        server_name nextgen-dev.ioos.us;
        # example url: http://nlb-nextgen-dev-c6f2020b8ae84ef5.elb.us-east-1.amazonaws.com/assets/index.ce230cd6.css
        location /xreds/ {
          sub_filter '/assets'  '/xreds/assets';
          sub_filter '/datasets'  '/xreds/datasets';
          sub_filter '/docs'  '/xreds/docs';
          sub_filter '/export'  '/xreds/export';
          sub_filter_types *;
          sub_filter_once off; # ensures it loops through the whole HTML (required)
          proxy_pass http://xreds-service:8090/;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Port $server_port;
          proxy_set_header Connection "";
          proxy_connect_timeout 600;
          proxy_send_timeout 600;
          proxy_read_timeout 600;
          fastcgi_read_timeout 600;
          send_timeout 600;
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.23
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
#  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx
